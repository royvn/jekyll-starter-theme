{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js","webpack:///./src/components/ToolkitHeadline.js","webpack:///./src/components/FeaturedPost.js","webpack:///./src/pages/blog.js"],"names":["Layout","children","data","className","siteTitle","site","siteMetadata","title","id","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","ToolkitHeadline","props","subtitle","FeaturedPost","key","node","to","fields","slug","fluid","frontmatter","image","childImageSharp","alt","date","excerpt","BlogPage","allMarkdownRemark","edges","map"],"mappings":"oKA0CeA,IA3BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEVC,EAAI,OAUV,OACE,yBAAKC,UAAU,WACb,kBAAC,IAAD,CAAQC,UAAWF,EAAKG,KAAKC,aAAaC,QAC1C,0BAAMJ,UAAU,OAAOK,GAAG,WACvBP,GAEH,kBAAC,IAAD,CAAQG,UAAWF,EAAKG,KAAKC,aAAaC,W,8FCrBhD,SAASE,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAML,EAAS,EAATA,MAC9BF,EADuC,OACvCA,KAcFQ,EAAkBH,GAAeL,EAAKC,aAAaI,YAEzD,OACE,kBAAC,IAAD,CACEI,eAAgB,CACdH,QAEFJ,MAAOA,EACPQ,cAAa,QAAUV,EAAKC,aAAaC,MACzCK,KAAM,CACJ,CACEI,KAAK,cACLC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASV,GAEX,CACEW,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASZ,EAAKC,aAAaa,QAE7B,CACEH,KAAK,gBACLC,QAASV,GAEX,CACES,KAAK,sBACLC,QAASJ,IAEXO,OAAOR,KAKfH,EAAIY,aAAe,CACjBV,KAAK,KACLC,KAAM,GACNF,YAAY,0CAUCD,O,kCCvFf,yBAmBea,IAjBf,SAAyBC,GACxB,OACG,yBAAKpB,UAAU,uBAChB,yBAAKA,UAAU,+BACV,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,sBACXoB,EAAMhB,OAET,wBAAIJ,UAAU,yBACXoB,EAAMC,e,gKCmBJC,MA1Bf,SAAsBF,GACrB,OACC,6BAASpB,UAAU,gBAAgBuB,IAAKH,EAAMI,KAAKnB,IAClD,kBAAC,OAAD,CAAMoB,GAAIL,EAAMI,KAAKE,OAAOC,KAAM3B,UAAU,uBAC3C,yBAAKA,UAAU,wBACd,kBAAC,IAAD,CAAK4B,MAAOR,EAAMI,KAAKK,YAAYC,MAAMC,gBAAgBH,MAAOI,IAAKZ,EAAMI,KAAKK,YAAYzB,SAE7F,yBAAKJ,UAAU,0BACd,wBAAIA,UAAU,wBACZoB,EAAMI,KAAKK,YAAYzB,OAEzB,uBAAGJ,UAAU,cACXoB,EAAMI,KAAKK,YAAYI,MAEzB,2BACEb,EAAMI,KAAKU,SAEb,0BAAMT,GAAIL,EAAMI,KAAKE,OAAOC,KAAM3B,UAAU,oCAA5C,mB,YCGQD,GAFEoC,UAdE,SAAC,GAAD,IAAEpC,EAAF,EAAEA,KAAF,OACf,kBAACF,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKO,MAAM,OAAOG,YAAY,2GAC9B,kBAACY,EAAA,EAAD,CAAiBf,MAAM,OAAOiB,SAAS,qFACvC,yBAAKrB,UAAU,+BACb,yBAAKA,UAAU,gDACZD,EAAKqC,kBAAkBC,MAAMC,KAAI,gBAAEd,EAAF,EAAEA,KAAF,OAChC,kBAAC,EAAD,CAAcD,IAAKC,EAAKnB,GAAImB,KAAMA,WAS3B","file":"component---src-pages-blog-js-a0925e128a085149cb4d.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Notice from \"./Notice\";\n\nconst Layout = ({ children }) => {\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"wrapper\">\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main className=\"main\" id=\"content\">\n        {children}\n      </main>\n      <Footer siteTitle={data.site.siteMetadata.title} />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `nl`,\n  meta: [],\n  description: `Designer & developer in regio Den Haag`,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO;\n","import React from \"react\";\n\nfunction ToolkitHeadline(props) {\n\treturn (\n    <div className=\"toolkit page-header\">\n\t\t\t<div className=\"page-width page-spacer grid\">\n        <div className=\"grid__item gcs-xs-1 gce-xs-13 gcs-md-1 gce-md-8\">\n          <h1 className=\"page-header__title\">\n            {props.title}\n          </h1>\n          <h2 className=\"page-header__subtitle\">\n            {props.subtitle}\n          </h2>\n        </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ToolkitHeadline;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nfunction FeaturedPost(props) {\n\treturn (\n\t\t<article className=\"featured-post\" key={props.node.id}>\n\t\t\t<Link to={props.node.fields.slug} className=\"featured-post__slug\">\n\t\t\t\t<div className=\"featured-post__image\">\n\t\t\t\t\t<Img fluid={props.node.frontmatter.image.childImageSharp.fluid} alt={props.node.frontmatter.title} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"featured-post__content\">\n\t\t\t\t\t<h2 className=\"featured-post__title\">\n\t\t\t\t\t\t{props.node.frontmatter.title}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p className=\"entry-meta\">\n\t\t\t\t\t\t{props.node.frontmatter.date}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{props.node.excerpt}\n\t\t\t\t\t</p>\n\t\t\t\t\t<span to={props.node.fields.slug} className=\"btn btn--block btn--outline-blue\">\n\t\t\t\t\t\tLees verder\n\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t</article>\n\t);\n}\n\nexport default FeaturedPost;","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport FeaturedPost from \"../components/FeaturedPost\";\nimport ToolkitHeadline from \"../components/ToolkitHeadline\";\n\nconst BlogPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Blog\" description=\"Zo nu en dan deel ik op mijn blog dingen die ik interessant vind of geleerd hebt. Kijk gerust rond ðŸ™ˆ.\" />\n    <ToolkitHeadline title=\"Blog\" subtitle=\"Zo nu en dan deel ik op mijn blog dingen die ik interessant vind of geleerd hebt\" />\n    <div className=\"grid page-width page-spacer\">\n      <div className=\"grid__item gcs-xs-1 gce-xs-13 featured-posts\">\n        {data.allMarkdownRemark.edges.map(({node}) => (\n          <FeaturedPost key={node.id} node={node} />\n        ))}\n      </div>\n    </div>\n  </Layout>\n);\n\nexport default BlogPage;\n\nexport const data = graphql`\n{\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\n    totalCount\n    edges {\n      node {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"D M Y\")\n          image {\n            childImageSharp {\n              fluid(maxWidth: 608, quality: 100) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n        excerpt(pruneLength: 64)\n        html\n        timeToRead\n        wordCount {\n          words\n        }\n      }\n      next {\n        frontmatter {\n          title\n        }\n      }\n      previous {\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n}\n`;"],"sourceRoot":""}